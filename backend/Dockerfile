# ---- Build ----
FROM oven/bun:alpine AS builder
ARG NODE_ENV=production
ARG APP_ORIGIN=""
ARG PORT=8080
ARG DATABASE_URL=""
ARG POSTGRES_DB=""
ARG POSTGRES_USER=""
ARG POSTGRES_PASSWORD=""
ARG REDIS_URL=""
ARG REDIS_PASSWORD=""
ARG AUTH_SECRET=""
ARG OAUTH_DISCORD_CLIENT_ID=""
ARG OAUTH_DISCORD_CLIENT_SECRET=""
ARG OAUTH_GOOGLE_CLIENT_ID=""
ARG OAUTH_GOOGLE_CLIENT_SECRET=""
ARG S3_ENDPOINT=""
ARG S3_REGION=""
ARG S3_BUCKET=""
ARG S3_ACCESS_KEY_ID=""
ARG S3_SECRET_ACCESS_KEY=""
ARG FFMPEG_PATH="/usr/bin/ffmpeg"

ENV NODE_ENV=${NODE_ENV}

WORKDIR /app

COPY package.json bun.lock ./

RUN bun install --frozen-lockfile --production

COPY . .

RUN cat > src/generated-env.ts <<EOF
export const BUILD_ENV = {
  NODE_ENV: "${NODE_ENV}",
  APP_ORIGIN: "${APP_ORIGIN}",
  PORT: "${PORT}",
  DATABASE_URL: "${DATABASE_URL}",
  POSTGRES_DB: "${POSTGRES_DB}",
  POSTGRES_USER: "${POSTGRES_USER}",
  POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}",
  REDIS_URL: "${REDIS_URL}",
  REDIS_PASSWORD: "${REDIS_PASSWORD}",
  COOKIE_NAME: "${COOKIE_NAME}",
  COOKIE_DOMAIN: "${COOKIE_DOMAIN}",
  COOKIE_SECURE: "${COOKIE_SECURE}",
  COOKIE_SAMESITE: "${COOKIE_SAMESITE}",
  SESSION_TTL_SECONDS: "${SESSION_TTL_SECONDS}",
  AUTH_SECRET: "${AUTH_SECRET}",
  OAUTH_DISCORD_CLIENT_ID: "${OAUTH_DISCORD_CLIENT_ID}",
  OAUTH_DISCORD_CLIENT_SECRET: "${OAUTH_DISCORD_CLIENT_SECRET}",
  OAUTH_GOOGLE_CLIENT_ID: "${OAUTH_GOOGLE_CLIENT_ID}",
  OAUTH_GOOGLE_CLIENT_SECRET: "${OAUTH_GOOGLE_CLIENT_SECRET}",
  S3_ENDPOINT: "${S3_ENDPOINT}",
  S3_REGION: "${S3_REGION}",
  S3_BUCKET: "${S3_BUCKET}",
  S3_ACCESS_KEY_ID: "${S3_ACCESS_KEY_ID}",
  S3_SECRET_ACCESS_KEY: "${S3_SECRET_ACCESS_KEY}",
  FFMPEG_PATH: "${FFMPEG_PATH}"
} as const;

export type BuildEnv = typeof BUILD_ENV;
EOF

RUN bun build src/index.ts --compile --minify --outfile server

# ---- Runtime ----
FROM alpine:3.21

RUN apk add --no-cache libstdc++ libc6-compat
RUN addgroup -S alpine && adduser -S alpine -G alpine

COPY --from=builder /app/server /app/server

RUN chown -R alpine:alpine /app && chmod +x /app/server

USER alpine

CMD ["/app/server"]

